- name:  Configure host master
  hosts: master
  gather_facts: false
  vars:
    pkgs:
      - curl
      - ca-certificates
      - postgresql-common
      - unzip
    postgres_pkgs:
      - postgresql-15
      - python3-psycopg2
    postgresql_server:  postgresql@15-main.service
    postgresql_conf_dir: /etc/postgresql/15/main/
    otus_superuser_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      66386539323539343761613437393130343464653935363232303433636238633839663063363062
      6662343461393430646330363262633264633961636366330a643266353461666134616438346537
      35346534363565646164353234663833366161366238316434666330303433613865363632643765
      6134373037373562620a633730636636343833613765343039326139313630636332373165373537
      3364

  tasks:
    - name: Install postgesql
      become: true
      block:
        - name: Update apt packages
          become: yes
          apt:
            update_cache: yes
            cache_valid_time: 86400 #One day


        - name: Install pkgs
          apt:
            name: "{{ pkgs }}"
            state: present

        - name: Automated repository configuration
          shell: echo "\n" | sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh

        - name: Install postgres pkgs
          apt:
            name: "{{ postgres_pkgs }}"
            state: present

        - name: Start postgres service
          systemd:
            name: "{{ postgresql_server }}"
            state: started
            enabled: yes
            daemon_reload: yes

        - name: Set listen address for postgresql
          ansible.builtin.lineinfile:
            path: "{{ postgresql_conf_dir }}/postgresql.conf"
            regexp: "^#listen_addresses = 'localhost'"
            line: listen_addresses = '*'

        - name: Modify pga_hba.conf
          ansible.builtin.lineinfile:
            path: "{{ postgresql_conf_dir }}/pg_hba.conf"
            regexp: '^host\s+all\s+all\s+127\.0\.0\.1\/32\s+scram-sha-256$'
            line: 'host    all             all             0.0.0.0/0            trust'

        - name: Restart postgres service
          systemd:
            name: "{{ postgresql_server }}"
            state: restarted

    - name: Create database users
      community.postgresql.postgresql_user:
        db: postgres
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        role_attr_flags: "{{ item.flags }}"
      become: yes
      become_user: postgres
      no_log: true
      with_items:
        - { name: otus_superuser, password: "{{ otus_superuser_password }}", flags: SUPERUSER}
      tags:
        - create_database_users